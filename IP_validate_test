from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QMainWindow, QLabel, QGridLayout, QWidget, QLineEdit, QApplication
from PyQt5.QtCore import QSize, QRegExp
from PyQt5.QtGui import QRegExpValidator, QValidator
 
 
class MainWindow(QMainWindow):
 
    def __init__(self):
        QMainWindow.__init__(self)
 
        self.setMinimumSize(QSize(480, 80))         # Set sizes 
        self.setWindowTitle("Line Edit IP Address") # Set the window title
        central_widget = QWidget(self)              # Create a central widget
        self.setCentralWidget(central_widget)       # Install the central widget
 
        grid_layout = QGridLayout(self)         # Create QGridLayout
        central_widget.setLayout(grid_layout)   # Set this accommodation in central widget
 
        grid_layout.addWidget(QLabel("Wpisz tutaj swoj adres IP", self), 0, 0)
 
        ipRange = "(?:[0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"   # Part of the regular expression
        # Regulare expression
        ipRegex = QRegExp("^" + ipRange + "\\." + ipRange + "\\." + ipRange + "\\." + ipRange + "$")
        ipValidator = QRegExpValidator(ipRegex, self)   
 
        lineEdit = QLineEdit()
        lineEdit.setValidator(ipValidator)      
        grid_layout.addWidget(lineEdit, 0, 1)

# class MainWindow(QMainWindow):
 
#     def __init__(self):
#         QMainWindow.__init__(self)
 
#         self.setMinimumSize(QSize(480, 80))         # Set sizes 
#         self.setWindowTitle("Line Edit IP Address") # Set the window title
#         central_widget = QWidget(self)              # Create a central widget
#         self.setCentralWidget(central_widget)       # Install the central widget
 
#         grid_layout = QGridLayout(self)         # Create QGridLayout
#         central_widget.setLayout(grid_layout)   # Set this accommodation in central widget
 
#         grid_layout.addWidget(QLabel("Wpisz tutaj swoj adres IP", self), 0, 0)
 
#         # ipRange = "(?:[0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"   # Part of the regular expression
#         # # Regulare expression
#         # ipRegex = QRegExp("^" + ipRange + "\\." + ipRange + "\\." + ipRange + "\\." + ipRange + "$")
#         # ipValidator = QRegExpValidator(ipRegex, self)   
 
#         lineEdit = QLineEdit()
        
    
#         validator = IP4Validator()
#         lineEdit.setValidator(validator)
#         grid_layout.addWidget(lineEdit, 0, 1)

# class IP4Validator(QValidator):
#     def __init__(self, parent=None):
#         super(IP4Validator, self).__init__(parent)

#     def validate(self, address, pos):
#         if not address:
#             return QValidator.Acceptable, pos
#         octets = address.split(".")
#         size = len(octets)
#         if size > 4:
#             return QValidator.Invalid, pos
#         emptyOctet = False
#         for octet in octets:
#             if not octet or octet == "___" or octet == "   ": # check for mask symbols
#                 emptyOctet = True
#                 continue
#             try:
#                 value = int(str(octet).strip(' _')) # strip mask symbols
#             except:
#                 return QValidator.Intermediate, pos
#             if value < 0 or value > 255:
#                 return QValidator.Invalid, pos
#         if size < 4 or emptyOctet:
#             return QValidator.Intermediate, pos
#         return QValidator.Acceptable, pos
 
 
if __name__ == "__main__":
    import sys
 
    app = QApplication(sys.argv)
    mw = MainWindow()
    mw.show()
    sys.exit(app.exec())